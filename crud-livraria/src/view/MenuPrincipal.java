/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;

/**
 *
 * @author windows
 */
public class MenuPrincipal extends javax.swing.JFrame implements InternalFrameListener{
        
    private boolean flagCadCliente, flagCadFuncionario, flagCadLivro, flagCadAutor = false;
    private boolean flagManuCliente, flagManuFuncionario, flagManuLivro, flagManuAutor = false;

    
    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }
    
    private void abrirCadCliente() {
        if (!flagCadCliente) {
            GUICadCliente gcp = new GUICadCliente();
            jDesktop.add(gcp);
            gcp.setVisible(true);
            flagCadCliente = true;
            gcp.addInternalFrameListener(this);
        }
    }
    
    private void abrirManuCliente() {
        if (!flagManuCliente) {
            GUIAltCliente gcp = new GUIAltCliente();
            jDesktop.add(gcp);
            gcp.setVisible(true);
            flagManuCliente = true;
            gcp.addInternalFrameListener(this);
        }
    }
    
    private void abrirCadFuncionario() {
        if (!flagCadFuncionario) {
            GUICadFuncionario gcp = new GUICadFuncionario();
            jDesktop.add(gcp);
            gcp.setVisible(true);
            flagCadFuncionario = true;
            gcp.addInternalFrameListener(this);
        }
    }
    
    private void abrirManuFuncionario() {
        if (!flagManuFuncionario) {
            GUIAlFuncionario gcp = new GUIAlFuncionario();
            jDesktop.add(gcp);
            gcp.setVisible(true);
            flagManuFuncionario = true;
            gcp.addInternalFrameListener(this);
        }
    }
    
    private void abrirCadLivro() {
        if (!flagCadLivro) {
            GUICadLivro gcp = new GUICadLivro();
            jDesktop.add(gcp);
            gcp.setVisible(true);
            flagCadLivro = true;
            gcp.addInternalFrameListener(this);
        }
    }
    
    private void abrirManuLivro() {
        if (!flagManuLivro) {
            GUIAlLivro gcp = new GUIAlLivro();
            jDesktop.add(gcp);
            gcp.setVisible(true);
            flagManuLivro = true;
            gcp.addInternalFrameListener(this);
        }
    }
    
    private void abrirCadAutor() {
        if (!flagCadAutor) {
            GUICadAutor gcp = new GUICadAutor();
            jDesktop.add(gcp);
            gcp.setVisible(true);
            flagCadAutor = true;
            gcp.addInternalFrameListener(this);
        }
    }
    
    private void abrirManuAutor() {
        if (!flagManuAutor) {
            GUIAlAutor gcp = new GUIAlAutor();
            jDesktop.add(gcp);
            gcp.setVisible(true);
            flagManuAutor = true;
            gcp.addInternalFrameListener(this);
        }
    }
    
    private void abrirGUILogin(){
        GUILogin gl = new GUILogin();
        gl.setVisible(true);
        this.setVisible(false);
    }//fecha abrirGUILogin
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktop = new javax.swing.JDesktopPane();
        jmMenu = new javax.swing.JMenuBar();
        jmNovo = new javax.swing.JMenu();
        jmiCliente = new javax.swing.JMenuItem();
        jmiFuncionario = new javax.swing.JMenuItem();
        jmiLivro = new javax.swing.JMenuItem();
        jmiAutor = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiManuCli = new javax.swing.JMenuItem();
        jmiFuncionarios = new javax.swing.JMenuItem();
        jmiAlLivro = new javax.swing.JMenuItem();
        jmiAlAutor = new javax.swing.JMenuItem();
        jmLogin = new javax.swing.JMenu();
        jmiTocarLogin = new javax.swing.JMenuItem();
        jmSair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jDesktopLayout = new javax.swing.GroupLayout(jDesktop);
        jDesktop.setLayout(jDesktopLayout);
        jDesktopLayout.setHorizontalGroup(
            jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 704, Short.MAX_VALUE)
        );
        jDesktopLayout.setVerticalGroup(
            jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );

        jmNovo.setText("Novo");

        jmiCliente.setText("Cliente");
        jmiCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiClienteActionPerformed(evt);
            }
        });
        jmNovo.add(jmiCliente);

        jmiFuncionario.setText("Funcionario");
        jmiFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFuncionarioActionPerformed(evt);
            }
        });
        jmNovo.add(jmiFuncionario);

        jmiLivro.setText("Livro");
        jmiLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiLivroActionPerformed(evt);
            }
        });
        jmNovo.add(jmiLivro);

        jmiAutor.setText("Autor");
        jmiAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAutorActionPerformed(evt);
            }
        });
        jmNovo.add(jmiAutor);

        jmMenu.add(jmNovo);

        jMenu2.setText("Manutenção");

        jmiManuCli.setText("Cliente");
        jmiManuCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiManuCliActionPerformed(evt);
            }
        });
        jMenu2.add(jmiManuCli);

        jmiFuncionarios.setText("Funcionario");
        jmiFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFuncionariosActionPerformed(evt);
            }
        });
        jMenu2.add(jmiFuncionarios);

        jmiAlLivro.setText("Livro");
        jmiAlLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlLivroActionPerformed(evt);
            }
        });
        jMenu2.add(jmiAlLivro);

        jmiAlAutor.setText("Autor");
        jmiAlAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlAutorActionPerformed(evt);
            }
        });
        jMenu2.add(jmiAlAutor);

        jmMenu.add(jMenu2);

        jmLogin.setText("Login");

        jmiTocarLogin.setText("Trocar de Usuário");
        jmiTocarLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiTocarLoginActionPerformed(evt);
            }
        });
        jmLogin.add(jmiTocarLogin);

        jmMenu.add(jmLogin);

        jmSair.setText("Sair");
        jmSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmSairMouseClicked(evt);
            }
        });
        jmMenu.add(jmSair);

        setJMenuBar(jmMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktop, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktop, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiClienteActionPerformed
        // TODO add your handling code here:
        abrirCadCliente();
    }//GEN-LAST:event_jmiClienteActionPerformed

    private void jmiFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFuncionarioActionPerformed
        // TODO add your handling code here:
        abrirCadFuncionario();
    }//GEN-LAST:event_jmiFuncionarioActionPerformed

    private void jmiLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiLivroActionPerformed
        // TODO add your handling code here:
        abrirCadLivro();
    }//GEN-LAST:event_jmiLivroActionPerformed

    private void jmiAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAutorActionPerformed
        // TODO add your handling code here:
        abrirCadAutor();
    }//GEN-LAST:event_jmiAutorActionPerformed

    private void jmiManuCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiManuCliActionPerformed
        // TODO add your handling code here:
        abrirManuCliente();
    }//GEN-LAST:event_jmiManuCliActionPerformed

    private void jmiFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFuncionariosActionPerformed
        // TODO add your handling code here:
        abrirManuFuncionario();
    }//GEN-LAST:event_jmiFuncionariosActionPerformed

    private void jmiAlLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlLivroActionPerformed
        // TODO add your handling code here:
        abrirManuLivro();
    }//GEN-LAST:event_jmiAlLivroActionPerformed

    private void jmiAlAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlAutorActionPerformed
        // TODO add your handling code here:
        abrirManuAutor();
    }//GEN-LAST:event_jmiAlAutorActionPerformed

    private void jmiTocarLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiTocarLoginActionPerformed
        // TODO add your handling code here:
         abrirGUILogin();
    }//GEN-LAST:event_jmiTocarLoginActionPerformed

    private void jmSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmSairMouseClicked
        // TODO add your handling code here:
        System.exit(EXIT_ON_CLOSE);
    }//GEN-LAST:event_jmSairMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktop;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jmLogin;
    private javax.swing.JMenuBar jmMenu;
    private javax.swing.JMenu jmNovo;
    private javax.swing.JMenu jmSair;
    private javax.swing.JMenuItem jmiAlAutor;
    private javax.swing.JMenuItem jmiAlLivro;
    private javax.swing.JMenuItem jmiAutor;
    private javax.swing.JMenuItem jmiCliente;
    private javax.swing.JMenuItem jmiFuncionario;
    private javax.swing.JMenuItem jmiFuncionarios;
    private javax.swing.JMenuItem jmiLivro;
    private javax.swing.JMenuItem jmiManuCli;
    private javax.swing.JMenuItem jmiTocarLogin;
    // End of variables declaration//GEN-END:variables

    public void internalFrameOpened(InternalFrameEvent ife) {
    }

    public void internalFrameClosing(InternalFrameEvent ife) {
    }

    public void internalFrameClosed(InternalFrameEvent ife) {
        if (ife.getInternalFrame() instanceof GUICadCliente) {
            flagCadCliente = false;
        }
        
        if (ife.getInternalFrame() instanceof GUIAltCliente) {
            flagManuCliente = false;
        }
        
        if (ife.getInternalFrame() instanceof GUICadFuncionario) {
            flagCadFuncionario = false;
        }
        
        if (ife.getInternalFrame() instanceof GUIAlFuncionario) {
            flagManuFuncionario = false;
        }
        
        if (ife.getInternalFrame() instanceof GUICadAutor) {
            flagCadAutor = false;
        }
        
        if (ife.getInternalFrame() instanceof GUIAlAutor) {
            flagManuAutor = false;
        }
        
        if (ife.getInternalFrame() instanceof GUICadLivro) {
            flagCadLivro = false;
        }
        
        if (ife.getInternalFrame() instanceof GUIAlLivro) {
            flagManuLivro = false;
        }

    }

    public void internalFrameIconified(InternalFrameEvent ife) {
    }

    public void internalFrameDeiconified(InternalFrameEvent ife) {
    }

    public void internalFrameActivated(InternalFrameEvent ife) {
    }

    public void internalFrameDeactivated(InternalFrameEvent ife) {
    } 
}
